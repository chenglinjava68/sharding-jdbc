<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.dangdang.com/schema/ddframe/rdb http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    
    <util:properties id="jdbcConfiguration" location="classpath:jdbc.properties"/>
    
    <bean id="ds_0_bak" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/ds_0"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>
    <bean id="ds_1_bak" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/ds_1"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>
    
    <bean id="receive" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
        <property name="driverClassName" value="#{jdbcConfiguration['jdbc.driverClassName']}"/>
        <!-- 添加监控用途的statFilter -->
        <property name="filters" value="#{jdbcConfiguration['jdbc.filters']}"/>
        
        <property name="maxActive" value="#{jdbcConfiguration['jdbc.maxActive']}"/>
        <property name="initialSize" value="#{jdbcConfiguration['jdbc.initialSize']}"/>
        <property name="maxWait" value="#{jdbcConfiguration['jdbc.maxWait']}"/>
        <property name="minIdle" value="#{jdbcConfiguration['jdbc.minIdle']}"/>
        
        <!-- 连接Idle一个小时后超时 -->
        <property name="timeBetweenEvictionRunsMillis"
                  value="#{jdbcConfiguration['jdbc.timeBetweenEvictionRunsMillis']}"/>
        <property name="minEvictableIdleTimeMillis" value="#{jdbcConfiguration['jdbc.minEvictableIdleTimeMillis']}"/>
        
        <property name="validationQuery" value="#{jdbcConfiguration['jdbc.validationQuery']}"/>
        <property name="testWhileIdle" value="#{jdbcConfiguration['jdbc.testWhileIdle']}"/>
        <property name="testOnBorrow" value="#{jdbcConfiguration['jdbc.testOnBorrow']}"/>
        <property name="testOnReturn" value="#{jdbcConfiguration['jdbc.testOnReturn']}"/>
        <property name="poolPreparedStatements" value="#{jdbcConfiguration['jdbc.poolPreparedStatements']}"/>
        <property name="maxOpenPreparedStatements" value="#{jdbcConfiguration['jdbc.maxOpenPreparedStatements']}"/>
        <property name="removeAbandoned"
                  value="#{jdbcConfiguration['jdbc.removeAbandoned']}"/> <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout"
                  value="#{jdbcConfiguration['jdbc.removeAbandonedTimeout']}"/> <!-- 1800秒，也就是30分钟 -->
        <property name="logAbandoned" value="#{jdbcConfiguration['jdbc.logAbandoned']}"/> <!-- 关闭abanded连接时输出错误日志 -->
    </bean>
    <bean id="receiveDateSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0001" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0001.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0002" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0002.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0003" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0003.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0004" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0004.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0005" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0005.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0006" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0006.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0007" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0007.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    <bean id="receive0008" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" parent="receive">
        <property name="url" value="#{jdbcConfiguration['receive0008.jdbc.url']}"/>
        <property name="username" value="#{jdbcConfiguration['jdbc.username']}"/>
        <property name="password" value="#{jdbcConfiguration['jdbc.password']}"/>
    </bean>
    
    
    <rdb:strategy id="databaseShardingStrategy" sharding-columns="orderId"
                  algorithm-class="com.dangdang.sharding.dao.algorithm.SingleKeyModuloDatabaseShardingAlgorithm"/>
    <rdb:strategy id="tableShardingStrategy" sharding-columns="orderId"
                  algorithm-class="com.dangdang.sharding.dao.algorithm.SingleKeyModuloTableShardingAlgorithm"/>
    
    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule
                data-sources="receive0001, receive0002, receive0003, receive0004, receive0005, receive0006, receive0007, receive0008"
                id-generator-class="com.dangdang.ddframe.rdb.sharding.id.generator.self.CommonSelfIdGenerator">
            <rdb:table-rules>
                <rdb:table-rule logic-table="orderinfo" actual-tables="orderinfo${0..511}"
                                database-strategy="databaseShardingStrategy" table-strategy="tableShardingStrategy">
                    <!--<rdb:auto-increment-column column-name="orderId"/>-->
                </rdb:table-rule>
            </rdb:table-rules>
        </rdb:sharding-rule>
    </rdb:data-source>
    <!--sharding 事务-->
    <bean id="shardingTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource"/>
    </bean>
    <!-- 全注解方式   需加上@Transactional -->
    <tx:annotation-driven transaction-manager="shardingTransactionManager"/>
    
    <!--single 事务-->
    <bean id="singleTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="receiveDateSource"/>
    </bean>
    <!-- 全注解方式   需加上@Transactional -->
    <!--<tx:annotation-driven transaction-manager="singleTransactionManager"/>-->
    <!-- 事务控制的业务方法配 -->
    <tx:advice id="singleTxAdvice" transaction-manager="singleTransactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="page*" read-only="true" />
            <tx:method name="list*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    <!-- 事务控制拦截 -->
    <aop:config proxy-target-class="true">
        <aop:advisor pointcut="execution(* com.dangdang.sharding.service.*SingleService.*(..))"
                     advice-ref="singleTxAdvice" />
    </aop:config>
</beans>